# Production Environment Configuration

include "root" {
  path = find_in_parent_folders()
}

terraform {
  source = "../../modules//eks-deployment"
}

prevent_destroy = true

generate "terraform.tfvars" {
  path      = "terraform.tfvars"
  if_exists = "overwrite"
  contents = <<EOF
# Auto-generated by Terragrunt for ${local.environment} environment
# Current stage: ${local.current_stage}
# Generated at: ${timestamp()}
EOF
}

terragrunt_version_constraint = ">= 0.50.0"
terraform_version_constraint  = ">= 1.3.0"

locals {
  environment = "prod"
  region      = "us-east-1"
  
  vpc_name = "my-manual-vpc"
  vpc_id   = ""
  
  cluster_name = "eks-deployment-prod"
  
  cost_optimized = false
  
  current_stage = "stage_04_addons"
  
  provider_version_overrides = {
    # aws        = "~> 5.50"
    # helm       = "~> 2.16"
    # kubernetes = "~> 2.37"
    # tls        = "~> 3.9"
  }
  
  environment_config = {
    node_instance_types = ["t3.large", "t3.xlarge"]
    node_desired_size   = 5
    node_max_size       = 10
    disk_size          = 100
    enable_monitoring   = true
  }
  
  valid_stages = ["stage_01_vpc", "stage_02_cluster", "stage_03_nodes", "stage_04_addons", "stage_05_monitoring"]
  stage_valid  = contains(local.valid_stages, local.current_stage)
  
  prod_tags = {
    Environment     = local.environment
    Purpose        = "production-workloads"
    CostCenter     = "engineering-production"
    AutoShutdown   = "false"
    Stage          = local.current_stage
    Criticality    = "high"
    BackupRequired = "true"
  }
  
  # DRY: Use centralized stage configuration from root terragrunt.hcl
  # Stage configuration matrix is now defined in root and eliminates duplication
}

inputs = {
  environment   = local.environment
  project_name  = "eks-deployment"
  cluster_name  = local.cluster_name
  region        = local.region
  aws_region    = local.region
  
  allowed_account_ids = ["436123228774"]
  owner              = "platform-team"
  cost_center        = "Engineering"
  
  common_tags = merge(
    {
      Project     = "eks-deployment"
      Environment = local.environment
      ManagedBy   = "Terragrunt"
    },
    local.prod_tags
  )
  
  vpc_id              = local.vpc_id
  vpc_name            = local.vpc_name
  private_subnet_tags = ["Private", "private"]
  public_subnet_tags  = ["Public", "public"]
  use_name_filter     = true
  validate_network    = true
  
  # DRY: Stage Control - Use simplified progressive deployment logic
  current_stage             = local.current_stage
  enable_stage_01_vpc       = contains(["stage_01_vpc", "stage_02_cluster", "stage_03_nodes", "stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_stage_02_cluster   = contains(["stage_02_cluster", "stage_03_nodes", "stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_stage_03_nodes     = contains(["stage_03_nodes", "stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_stage_04_addons    = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_stage_05_monitoring = local.current_stage == "stage_05_monitoring"
  
  enable_bastion = true
  
  cluster_version = "1.33"
  
  endpoint_private_access          = true
  endpoint_public_access           = true
  public_access_cidrs              = ["10.0.0.0/8"]
  eks_create_private_access_sg     = true
  eks_private_access_cidrs         = ["10.0.0.0/16"]
  eks_additional_security_group_ids = []
  
  enable_cluster_encryption = true
  kms_key_arn              = ""
  kms_key_alias            = "alias/prod-eks-cluster-cluster-key"
  
  node_instance_types_general = local.environment_config.node_instance_types
  node_desired_size_general   = local.environment_config.node_desired_size
  node_max_size_general       = local.environment_config.node_max_size
  node_min_size_general       = 3
  capacity_type              = "ON_DEMAND"
  disk_size                  = local.environment_config.disk_size
  
  # DRY: Addons Configuration - Using simplified stage logic
  enable_vpc_cni        = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_kube_proxy     = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_coredns        = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  enable_ebs_csi_driver = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  create_irsa_roles     = contains(["stage_04_addons", "stage_05_monitoring"], local.current_stage)
  
  enable_prometheus         = local.environment_config.enable_monitoring
  enable_kong              = true
  monitoring_namespace     = "monitoring"
  grafana_admin_password   = "prod-admin-ultra-secure-2025"
  prometheus_storage_size  = "100Gi"
  grafana_storage_size     = "50Gi"
  grafana_ingress_enabled  = true
  grafana_ingress_host     = "grafana.production.company.com"
  
  cluster_endpoint      = ""
  cluster_ca_certificate = ""
  oidc_provider_arn     = ""
}
